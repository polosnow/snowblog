<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【Python】数据分析之最小二乘</title>
      <link href="/zgyblog/posts/b5c60cfd/"/>
      <url>/zgyblog/posts/b5c60cfd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zgyblog\css\APlayer.min.css"><script src="\zgyblog\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\zgyblog\js\Meting.min.js"></script><h2 id="最小二乘理论"><a href="#最小二乘理论" class="headerlink" title="最小二乘理论"></a>最小二乘理论</h2><p><em><strong>下面运用线性最小二乘模型对MNIST_data进行数据拟合、分类</strong></em><br>图像分类问题：基于手写数字数据库 MNIST， 应用最小二乘模型对数字 0 和其他数字进行分类。 MNIST 数据库来自美国，图像数据已经被转化为28×28=784维的向量存储。标签以 10维向量形式存储。数据库的下载网址为 <a href="http://yann.lecun.com/exdb/mnist/">http://yann.lecun.com/exdb/mnist/</a>。MNIST 数据库将数据分2 组，一组是 60000 张训练集，另一组是 10000 张测试集。将一张图片的数据设为 494 维，第 1 维是常量 1，其余 493 维是至少在 600 张图片中像素值不为 0 的像素。如果图像为数字 0，则取1，否则取−1。<br>（注：①首先对训练集的某些特征进行训练，得到较好的拟合解，最终能和理论值最大程度的接近。②利用对训练集训练得出的结果对测试集进行测试，看是否理想。③特征数增加，对拟合度有很大的影响。④拟合方式中线性、非线性都可以实现。）</p><h3 id="线性最小二乘"><a href="#线性最小二乘" class="headerlink" title="线性最小二乘"></a>线性最小二乘</h3><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="comment">#import matplotlib.pyplot as plt</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 训练集文件</span></span><br><span class="line">train_images_idx3_ubyte_file = <span class="string">&#x27;C:\\Users\\Administrator\\Desktop\\1900955-朱光耀-硕\\MNIST_data\\train-images.idx3-ubyte&#x27;</span></span><br><span class="line"><span class="comment"># 训练集标签文件</span></span><br><span class="line">train_labels_idx1_ubyte_file = <span class="string">&#x27;C:\\Users\\Administrator\\Desktop\\1900955-朱光耀-硕\\MNIST_data\\train-labels.idx1-ubyte&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 测试集文件</span></span><br><span class="line">test_images_idx3_ubyte_file = <span class="string">&#x27;C:\\Users\\Administrator\\Desktop\\1900955-朱光耀-硕\\MNIST_data\\t10k-images.idx3-ubyte&#x27;</span></span><br><span class="line"><span class="comment"># 测试集标签文件</span></span><br><span class="line">test_labels_idx1_ubyte_file = <span class="string">&#x27;C:\\Users\\Administrator\\Desktop\\1900955-朱光耀-硕\\MNIST_data\\t10k-labels.idx1-ubyte&#x27;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode_idx3_ubyte</span>(<span class="params">idx3_ubyte_file</span>):</span><br><span class="line">    <span class="comment"># 读取二进制数据</span></span><br><span class="line">    bin_data = <span class="built_in">open</span>(idx3_ubyte_file, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">    <span class="comment"># 解析文件头信息，依次为魔数、图片数量、每张图片高、每张图片宽</span></span><br><span class="line">    offset = <span class="number">0</span></span><br><span class="line">    fmt_header = <span class="string">&#x27;&gt;iiii&#x27;</span></span><br><span class="line">    magic_number, num_images, num_rows, num_cols = struct.unpack_from(fmt_header, bin_data, offset)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;魔数:%d, 图片数量: %d张, 图片大小: %d*%d&#x27;</span> % (magic_number, num_images, num_rows, num_cols)) </span><br><span class="line">    <span class="comment"># 解析数据集</span></span><br><span class="line">    image_size = num_rows * num_cols</span><br><span class="line">    offset += struct.calcsize(fmt_header)</span><br><span class="line">    fmt_image = <span class="string">&#x27;&gt;&#x27;</span> + <span class="built_in">str</span>(image_size) + <span class="string">&#x27;B&#x27;</span></span><br><span class="line">    images = np.empty((num_images, num_rows, num_cols))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_images):</span><br><span class="line">        <span class="keyword">if</span> (i + <span class="number">1</span>) % <span class="number">10000</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span> (<span class="string">&#x27;已解析 %d&#x27;</span> % (i + <span class="number">1</span>) + <span class="string">&#x27;张&#x27;</span>)</span><br><span class="line">        images[i] = np.array(struct.unpack_from(fmt_image, bin_data, offset)).reshape((num_rows, num_cols))</span><br><span class="line">        offset += struct.calcsize(fmt_image)</span><br><span class="line">    <span class="keyword">return</span> images</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode_idx1_ubyte</span>(<span class="params">idx1_ubyte_file</span>):</span><br><span class="line">    <span class="comment"># 读取二进制数据</span></span><br><span class="line">    bin_data = <span class="built_in">open</span>(idx1_ubyte_file, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">    <span class="comment"># 解析文件头信息，依次为魔数和标签数</span></span><br><span class="line">    offset = <span class="number">0</span></span><br><span class="line">    fmt_header = <span class="string">&#x27;&gt;ii&#x27;</span></span><br><span class="line">    magic_number, num_images = struct.unpack_from(fmt_header, bin_data, offset)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;魔数:%d, 图片数量: %d张&#x27;</span> % (magic_number, num_images)) </span><br><span class="line">    <span class="comment"># 解析数据集</span></span><br><span class="line">    offset += struct.calcsize(fmt_header)</span><br><span class="line">    fmt_image = <span class="string">&#x27;&gt;B&#x27;</span></span><br><span class="line">    labels = np.empty(num_images)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_images):</span><br><span class="line">        <span class="keyword">if</span> (i + <span class="number">1</span>) % <span class="number">10000</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span> (<span class="string">&#x27;已解析 %d&#x27;</span> % (i + <span class="number">1</span>) + <span class="string">&#x27;张&#x27;</span>)</span><br><span class="line">        labels[i] = struct.unpack_from(fmt_image, bin_data, offset)[<span class="number">0</span>]</span><br><span class="line">        offset += struct.calcsize(fmt_image)</span><br><span class="line">    <span class="keyword">return</span> labels</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_train_images</span>(<span class="params">idx_ubyte_file=train_images_idx3_ubyte_file</span>):</span><br><span class="line">    <span class="keyword">return</span> decode_idx3_ubyte(idx_ubyte_file)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_train_labels</span>(<span class="params">idx_ubyte_file=train_labels_idx1_ubyte_file</span>):</span><br><span class="line">    <span class="keyword">return</span> decode_idx1_ubyte(idx_ubyte_file)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_test_images</span>(<span class="params">idx_ubyte_file=test_images_idx3_ubyte_file</span>):</span><br><span class="line">    <span class="keyword">return</span> decode_idx3_ubyte(idx_ubyte_file)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_test_labels</span>(<span class="params">idx_ubyte_file=test_labels_idx1_ubyte_file</span>):</span><br><span class="line">    <span class="keyword">return</span> decode_idx1_ubyte(idx_ubyte_file)</span><br><span class="line"> </span><br><span class="line">     </span><br><span class="line">xuanze=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (xuanze==<span class="number">1</span>):</span><br><span class="line">    <span class="comment">#训练集加载</span></span><br><span class="line">    train_images = load_train_images()</span><br><span class="line">    train_labels = load_train_labels()</span><br><span class="line">    <span class="comment">#测试集加载</span></span><br><span class="line">    test_images = load_test_images()</span><br><span class="line">    test_labels = load_test_labels()</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class="line">    a=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">         <span class="keyword">if</span> train_labels[i]==<span class="number">0.0</span>:</span><br><span class="line">             b=<span class="number">1</span></span><br><span class="line">             a.append(b)             <span class="comment">#训练集中数字0的个数   </span></span><br><span class="line">    </span><br><span class="line">    pixel_position=[]</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">28</span>):               <span class="comment">#对mxn像素遍历</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">28</span>):</span><br><span class="line">            t=[]</span><br><span class="line">            q=<span class="number">1</span></span><br><span class="line">            flag=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> w <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">                <span class="keyword">if</span> train_images[w][m,n]!=<span class="number">0</span>:</span><br><span class="line">                    t.append(q)</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">len</span>(t)&gt;=<span class="number">600</span>):     <span class="comment">#找到至少600张图片像素不为0的像素点</span></span><br><span class="line">                    flag=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> (flag):                 </span><br><span class="line">                pixel_position.append((m,n))    <span class="comment">#找到493维像素位置,并构成数组，索引为0到492</span></span><br><span class="line">                              </span><br><span class="line">    </span><br><span class="line">   <span class="comment">#A1构造</span></span><br><span class="line">    A1=np.zeros((<span class="number">60000</span>,<span class="number">494</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):            <span class="comment">#对60000个数据进行操作</span></span><br><span class="line">        A1[i][<span class="number">0</span>]=<span class="number">1</span>                     <span class="comment">#第一维是1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">494</span>):</span><br><span class="line">            m=pixel_position[j-<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">            n=pixel_position[j-<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">            A1[i,j]=train_images[i][m,n]  <span class="comment">#将第i个图片493个位置的像素放到A的第i行</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#b1构造（理论值）</span></span><br><span class="line">    b1=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">       <span class="keyword">if</span>  train_labels[i]==<span class="number">0.0</span>:</span><br><span class="line">           b1.append([<span class="number">1</span>])</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           b1.append([-<span class="number">1</span>])</span><br><span class="line">    b1=np.mat(b1)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#求解seita</span></span><br><span class="line">    Q,R=np.linalg.qr(A1)  <span class="comment">#qr分解</span></span><br><span class="line">    seita=(np.mat(R).I)*(np.mat(Q).T)*b1</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#求解预测的b_jian（预测值）</span></span><br><span class="line">    b_piao=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">        c=A1[i]*seita</span><br><span class="line">        <span class="keyword">if</span> c&gt;=<span class="number">0</span>:</span><br><span class="line">            b_piao.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b_piao.append([-<span class="number">1</span>])</span><br><span class="line">    b_jian=np.mat(b_piao)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#进行数据统计</span></span><br><span class="line">    d=[]</span><br><span class="line">    e=[]</span><br><span class="line">    f=[]</span><br><span class="line">    g=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">        <span class="keyword">if</span> (b1[i]==<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==<span class="number">1</span>):</span><br><span class="line">            d.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> (b1[i]==<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==-<span class="number">1</span>):</span><br><span class="line">            e.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> (b1[i]==-<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==<span class="number">1</span>):</span><br><span class="line">            f.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> (b1[i]==-<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==-<span class="number">1</span>):</span><br><span class="line">            g.append([<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;训练集统计结果&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(d),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(e),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(a))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(f),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(g),<span class="string">&#x27; &#x27;</span>,<span class="number">60000</span>-<span class="built_in">len</span>(a))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(d)+<span class="built_in">len</span>(f),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(e)+<span class="built_in">len</span>(g),<span class="string">&#x27; &#x27;</span>,<span class="number">60000</span>)  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;错误率:&#x27;</span>,(<span class="built_in">len</span>(e)+<span class="built_in">len</span>(f))/<span class="number">60000</span>)</span><br><span class="line">   </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------------------------------------------------------&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    a=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">         <span class="keyword">if</span> test_labels[i]==<span class="number">0.0</span>:</span><br><span class="line">             b=<span class="number">1</span></span><br><span class="line">             a.append(b)              <span class="comment">#数字0的个数</span></span><br><span class="line">    <span class="comment">#矩阵A2构建（像素位置用训练集训练出来的位置）</span></span><br><span class="line">    A2=np.zeros((<span class="number">10000</span>,<span class="number">494</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):            <span class="comment">#对10000个数据进行操作</span></span><br><span class="line">        A2[i][<span class="number">0</span>]=<span class="number">1</span>                     <span class="comment">#第一维是1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">494</span>):</span><br><span class="line">            m=pixel_position[j-<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">            n=pixel_position[j-<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">            A2[i,j]=test_images[i][m,n]  <span class="comment">#将493个位置的像素放到A的第i行</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#b2构造（理论值）</span></span><br><span class="line">    b2=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">       <span class="keyword">if</span>  test_labels[i]==<span class="number">0.0</span>:</span><br><span class="line">           b2.append([<span class="number">1</span>])</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           b2.append([-<span class="number">1</span>])</span><br><span class="line">    b2=np.mat(b2)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#seita用训练集预测的</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#求解预测的b_jian（预测值）</span></span><br><span class="line">    b_piao=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">        c=A2[i]*seita</span><br><span class="line">        <span class="keyword">if</span> c&gt;=<span class="number">0</span>:</span><br><span class="line">            b_piao.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b_piao.append([-<span class="number">1</span>])</span><br><span class="line">    b_jian=np.mat(b_piao)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#进行数据统计</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;加入3000个新特征后-------------------------------------------------------&#x27;</span>)</span><br><span class="line">    <span class="comment">#A11构造</span></span><br><span class="line">    RR=np.zeros((<span class="number">3000</span>,<span class="number">494</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3000</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">494</span>):</span><br><span class="line">            RR[i,j]=random.choice([<span class="number">1</span>,-<span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    cankao=(np.mat(A1))*(np.mat(RR).T)               <span class="comment">#60000x494  494x3000----60000x3000</span></span><br><span class="line">    A11=np.zeros((<span class="number">60000</span>,<span class="number">3494</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):         </span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3494</span>):</span><br><span class="line">            <span class="keyword">if</span> j&lt;<span class="number">494</span>:</span><br><span class="line">               A11[i][j]=A1[i][j]           <span class="comment">#前一部分不动</span></span><br><span class="line">            <span class="keyword">if</span> (j&gt;=<span class="number">494</span>) <span class="keyword">and</span> (cankao[i,j-<span class="number">494</span>]&gt;<span class="number">0</span>):</span><br><span class="line">               A11[i][j]=cankao[i,j-<span class="number">494</span>]</span><br><span class="line">            <span class="keyword">if</span> (j&gt;=<span class="number">494</span>) <span class="keyword">and</span> (cankao[i,j-<span class="number">494</span>]&lt;=<span class="number">0</span>):</span><br><span class="line">               A11[i][j]=<span class="number">0</span></span><br><span class="line">    <span class="comment">#b1不变（理论值不变）</span></span><br><span class="line">    <span class="comment">#QR分解</span></span><br><span class="line">    Q1,R1=np.linalg.qr(A11)   </span><br><span class="line">    seita1=(np.mat(R1).I)*(np.mat(Q1).T)*b1</span><br><span class="line">    <span class="comment">#求解预测的b_jian（预测值）</span></span><br><span class="line">    b_piao=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">        c=A11[i]*seita1</span><br><span class="line">        <span class="keyword">if</span> c&gt;=<span class="number">0</span>:</span><br><span class="line">            b_piao.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b_piao.append([-<span class="number">1</span>])</span><br><span class="line">    b_jian=np.mat(b_piao)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#略，进行数据统计（和上方一致）</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class="line">    <span class="comment">#A22构造</span></span><br><span class="line">    </span><br><span class="line">    cankao=(np.mat(A2))*(np.mat(RR).T)               <span class="comment">#10000x494  494x3000----10000x3000</span></span><br><span class="line">    A22=np.zeros((<span class="number">10000</span>,<span class="number">3494</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):         </span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3494</span>):</span><br><span class="line">            <span class="keyword">if</span> j&lt;<span class="number">494</span>:</span><br><span class="line">               A22[i][j]=A2[i][j]           <span class="comment">#前一部分不动</span></span><br><span class="line">            <span class="keyword">if</span> (j&gt;=<span class="number">494</span>) <span class="keyword">and</span> (cankao[i,j-<span class="number">494</span>]&gt;<span class="number">0</span>):</span><br><span class="line">               A22[i][j]=cankao[i,j-<span class="number">494</span>]</span><br><span class="line">            <span class="keyword">if</span> (j&gt;=<span class="number">494</span>) <span class="keyword">and</span> (cankao[i,j-<span class="number">494</span>]&lt;=<span class="number">0</span>):</span><br><span class="line">               A22[i][j]=<span class="number">0</span> </span><br><span class="line">    <span class="comment">#b2不变（对应理论值不变）</span></span><br><span class="line">    <span class="comment">#seita1用训练集预测的</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#求解预测的b_jian（预测值）</span></span><br><span class="line">    b_piao=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">        c=A22[i]*seita1</span><br><span class="line">        <span class="keyword">if</span> c&gt;=<span class="number">0</span>:</span><br><span class="line">            b_piao.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b_piao.append([-<span class="number">1</span>])</span><br><span class="line">    b_jian=np.mat(b_piao)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#略，进行数据统计</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面只给出第一次选取的特征的结果：<br><img src="https://img-blog.csdnimg.cn/20200214110638631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FseWR6Z3k=,size_16,color_FFFFFF,t_70" alt="5000个原特征以及在加入1000个新特征的结果"><em><strong>下面运用非线性最小二乘模型对数据进行数据拟合、分类</strong></em><br>利用非线性最小二乘分类求解上述图像分类问题。先构成线性模型<br>$$ f(x)=x^T\beta+v$$<br>通过求解如下非线性最小二乘问题确定参数$\beta$和$v$，<br><img src="https://img-blog.csdnimg.cn/20200215111721506.png" alt="在这里插入图片描述"><br>其中，前边为 sigmoid 函数，$\lambda$为正则化参数。</p><h3 id="非线性最小二乘"><a href="#非线性最小二乘" class="headerlink" title="非线性最小二乘"></a>非线性最小二乘</h3><p>此程序进行了25次循环，利用了5000次特征，即使未加新特征，也将错误率降低了很多。<br>代码如下(读取文件程序不在写)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Jacobian1</span>(<span class="params">A1,beita</span>):</span><br><span class="line">    u=A1*beita                  <span class="comment">#u为60000x1的矩阵，即预测值</span></span><br><span class="line">    <span class="comment">#求fai_u_dao</span></span><br><span class="line">    uu=np.array(u)    <span class="comment">#格式改一下，进行e的uu次方操作</span></span><br><span class="line">    fai_u_dao=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):        </span><br><span class="line">        n2=math.exp(uu[i])+math.exp(-uu[i])</span><br><span class="line">        n=<span class="number">4</span>/(n2**<span class="number">2</span>)</span><br><span class="line">        fai_u_dao.append([n])</span><br><span class="line">    fai_u_dao=np.mat(fai_u_dao)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#求解函数的Jocabian矩阵 60494x494</span></span><br><span class="line">    Df_shang=np.zeros((<span class="number">60000</span>,<span class="number">494</span>))</span><br><span class="line">    A1=np.mat(A1)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">494</span>):</span><br><span class="line">            Df_shang[i,j]=fai_u_dao[i]*A1[i,j]</span><br><span class="line">    </span><br><span class="line">    Df_xia=<span class="number">10</span>*np.eye(<span class="number">494</span>)</span><br><span class="line">    </span><br><span class="line">    Df=np.r_[Df_shang,Df_xia]          <span class="comment">#拼接</span></span><br><span class="line">    <span class="keyword">return</span> Df</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ff</span>(<span class="params">A1,b1,beita</span>):            <span class="comment">#输出f(beita)</span></span><br><span class="line">    u=A1*beita                  <span class="comment">#u为60000x1的矩阵，即预测值</span></span><br><span class="line">    <span class="comment">#求fai_u</span></span><br><span class="line">    uu=np.array(u)    <span class="comment">#格式改一下，进行e的uu次方操作</span></span><br><span class="line">    fai_u=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):        </span><br><span class="line">        n1=math.exp(uu[i])-math.exp(-uu[i])</span><br><span class="line">        n2=math.exp(uu[i])+math.exp(-uu[i])</span><br><span class="line">        t=n1/n2</span><br><span class="line">        fai_u.append([t])</span><br><span class="line"></span><br><span class="line">    fai_u=np.mat(fai_u)</span><br><span class="line">    shang=fai_u-b1</span><br><span class="line">    xia=<span class="number">10</span>*beita</span><br><span class="line">    f1=np.r_[shang,xia]</span><br><span class="line">    <span class="keyword">return</span> f1</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hanshuzhi</span>(<span class="params">f,t</span>):     <span class="comment">#输出函数值，便于比较</span></span><br><span class="line">    f_fang=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(t):</span><br><span class="line">        f_fang+=(f[i])**<span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> f_fang</span><br><span class="line"></span><br><span class="line">xuanze=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (xuanze==<span class="number">1</span>):</span><br><span class="line">    <span class="comment">#训练集加载</span></span><br><span class="line">    train_images = load_train_images()</span><br><span class="line">    train_labels = load_train_labels()</span><br><span class="line">    <span class="comment">#测试集加载</span></span><br><span class="line">    test_images = load_test_images()</span><br><span class="line">    test_labels = load_test_labels() </span><br><span class="line"></span><br><span class="line">    a1=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">         <span class="keyword">if</span> train_labels[i]==<span class="number">0.0</span>:</span><br><span class="line">             b=<span class="number">1</span></span><br><span class="line">             a1.append(b)             <span class="comment">#训练集中数字0的个数   </span></span><br><span class="line">    </span><br><span class="line">    pixel_position=[]</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">28</span>):               <span class="comment">#对mxn像素遍历</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">28</span>):</span><br><span class="line">            t=[]</span><br><span class="line">            q=<span class="number">1</span></span><br><span class="line">            flag=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> w <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">                <span class="keyword">if</span> train_images[w][m,n]!=<span class="number">0</span>:</span><br><span class="line">                    t.append(q)</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">len</span>(t)&gt;=<span class="number">600</span>):     <span class="comment">#找到至少600张图片像素不为0的像素点</span></span><br><span class="line">                    flag=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> (flag):                 </span><br><span class="line">                pixel_position.append((m,n))    <span class="comment">#找到493维像素位置,并构成数组，索引为0到492</span></span><br><span class="line">                              </span><br><span class="line">    </span><br><span class="line">   <span class="comment">#A1构造</span></span><br><span class="line">    A1=np.zeros((<span class="number">60000</span>,<span class="number">494</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):            <span class="comment">#对60000个数据进行操作</span></span><br><span class="line">        A1[i][<span class="number">0</span>]=<span class="number">1</span>                     <span class="comment">#第一维是1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">494</span>):</span><br><span class="line">            m=pixel_position[j-<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">            n=pixel_position[j-<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">            A1[i,j]=train_images[i][m,n]  <span class="comment">#将第i张图片493个位置的像素放到A的第i行</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#b1构造</span></span><br><span class="line">    b1=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">       <span class="keyword">if</span>  train_labels[i]==<span class="number">0.0</span>:</span><br><span class="line">           b1.append([<span class="number">1</span>])</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           b1.append([-<span class="number">1</span>])</span><br><span class="line">    b1=np.mat(b1)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#beita初值设定、lamda初值设定</span></span><br><span class="line">    beita=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">494</span>):</span><br><span class="line">        m=random.choice([[<span class="number">0.001</span>],[<span class="number">0.001</span>]])</span><br><span class="line">        beita.append(m)</span><br><span class="line">    beita=np.mat(beita)</span><br><span class="line">    </span><br><span class="line">    lamda=<span class="number">10</span></span><br><span class="line">    <span class="comment">#开始循环迭代</span></span><br><span class="line">    <span class="keyword">for</span> count <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">26</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;开始运行&#x27;</span>)</span><br><span class="line">        <span class="comment">#调用求解Jacobian矩阵</span></span><br><span class="line">        Df=Jacobian1(A1,beita)</span><br><span class="line">        Df=np.mat(Df)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#调用计算f(beita)</span></span><br><span class="line">        f=ff(A1,b1,beita)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#调用求解求函数值 （60494维）</span></span><br><span class="line">        f_fang=hanshuzhi(f,<span class="number">60494</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#先构造I</span></span><br><span class="line">        II=np.eye(<span class="number">494</span>)</span><br><span class="line">        <span class="comment">#进行迭代</span></span><br><span class="line">        Df_TDf=Df.T * Df</span><br><span class="line">        kuohao= Df_TDf+lamda *II</span><br><span class="line">        zuo=kuohao.I*(Df.T)</span><br><span class="line">        beita2=np.mat(beita) - zuo * f</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#调用计算f(beita2)</span></span><br><span class="line">        f2=ff(A1,b1,beita2)</span><br><span class="line">        <span class="comment">#调用计算函数值        </span></span><br><span class="line">        f2_fang=hanshuzhi(f2,<span class="number">60494</span>)</span><br><span class="line">            </span><br><span class="line">        <span class="comment">#判断</span></span><br><span class="line">        <span class="keyword">if</span> (f2_fang&lt;f_fang):</span><br><span class="line">            beita=beita2</span><br><span class="line">            lamda=<span class="number">0.8</span>*lamda</span><br><span class="line">        <span class="keyword">if</span> (f2_fang&gt;=f_fang):</span><br><span class="line">            beita=beita</span><br><span class="line">            lamda=<span class="number">2</span>*lamda</span><br><span class="line">        <span class="keyword">if</span> (f2_fang&lt;<span class="number">0.001</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span>(count,<span class="string">&#x27;次循环结束&#x27;</span>)</span><br><span class="line"><span class="comment">#    print(beita)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class="line">    <span class="comment">#求解预测的b_jian</span></span><br><span class="line">    b_piao=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">        c=A1[i]*beita</span><br><span class="line">        <span class="keyword">if</span> c&gt;=<span class="number">0</span>:</span><br><span class="line">            b_piao.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b_piao.append([-<span class="number">1</span>])</span><br><span class="line">    b_jian=np.mat(b_piao)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#进行数据统计</span></span><br><span class="line">    d=[]</span><br><span class="line">    e=[]</span><br><span class="line">    f=[]</span><br><span class="line">    g=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60000</span>):</span><br><span class="line">        <span class="keyword">if</span> (b1[i]==<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==<span class="number">1</span>):</span><br><span class="line">            d.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> (b1[i]==<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==-<span class="number">1</span>):</span><br><span class="line">            e.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> (b1[i]==-<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==<span class="number">1</span>):</span><br><span class="line">            f.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> (b1[i]==-<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==-<span class="number">1</span>):</span><br><span class="line">            g.append([<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;训练集统计结果&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(d),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(e),<span class="string">&#x27; &#x27;</span>,<span class="number">5923</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(f),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(g),<span class="string">&#x27; &#x27;</span>,<span class="number">54077</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(d)+<span class="built_in">len</span>(f),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(e)+<span class="built_in">len</span>(g),<span class="string">&#x27; &#x27;</span>,<span class="number">60000</span>)  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;错误率:&#x27;</span>,(<span class="built_in">len</span>(e)+<span class="built_in">len</span>(f))/<span class="number">60000</span>) </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class="line">    <span class="comment">#矩阵A2构建</span></span><br><span class="line">    A2=np.zeros((<span class="number">10000</span>,<span class="number">494</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):            <span class="comment">#对10000个数据进行操作</span></span><br><span class="line">        A2[i][<span class="number">0</span>]=<span class="number">1</span>                     <span class="comment">#第一维是1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">494</span>):</span><br><span class="line">            m=pixel_position[j-<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">            n=pixel_position[j-<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">            A2[i,j]=test_images[i][m,n]  <span class="comment">#将493个位置的像素放到A的第i行</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#b2构造</span></span><br><span class="line">    b2=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">       <span class="keyword">if</span>  test_labels[i]==<span class="number">0.0</span>:</span><br><span class="line">           b2.append([<span class="number">1</span>])</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           b2.append([-<span class="number">1</span>])</span><br><span class="line">    b2=np.mat(b2)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#beita用训练集预测的</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#求解预测的b_jian</span></span><br><span class="line">    b_piao=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">        c=A2[i]*beita</span><br><span class="line">        <span class="keyword">if</span> c&gt;=<span class="number">0</span>:</span><br><span class="line">            b_piao.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b_piao.append([-<span class="number">1</span>])</span><br><span class="line">    b_jian=np.mat(b_piao)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#进行数据统计</span></span><br><span class="line">    d=[]</span><br><span class="line">    e=[]</span><br><span class="line">    f=[]</span><br><span class="line">    g=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">        <span class="keyword">if</span> (b2[i]==<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==<span class="number">1</span>):</span><br><span class="line">            d.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> (b2[i]==<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==-<span class="number">1</span>):</span><br><span class="line">            e.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> (b2[i]==-<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==<span class="number">1</span>):</span><br><span class="line">            f.append([<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> (b2[i]==-<span class="number">1</span>) <span class="keyword">and</span> (b_jian[i]==-<span class="number">1</span>):</span><br><span class="line">            g.append([<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;测试集统计结果&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(d),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(e),<span class="string">&#x27; &#x27;</span>,<span class="number">980</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(f),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(g),<span class="string">&#x27; &#x27;</span>,<span class="number">9020</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(d)+<span class="built_in">len</span>(f),<span class="string">&#x27; &#x27;</span>,<span class="built_in">len</span>(e)+<span class="built_in">len</span>(g),<span class="string">&#x27; &#x27;</span>,<span class="number">10000</span>)  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;错误率:&#x27;</span>,(<span class="built_in">len</span>(e)+<span class="built_in">len</span>(f))/<span class="number">10000</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://img-blog.csdnimg.cn/20200214111323877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FseWR6Z3k=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Hexo博客】本平台安装美化笔记（三）之美化总结</title>
      <link href="/zgyblog/posts/db754e0f/"/>
      <url>/zgyblog/posts/db754e0f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zgyblog\css\APlayer.min.css"><script src="\zgyblog\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\zgyblog\js\Meting.min.js"></script><h2 id="左上角天气"><a href="#左上角天气" class="headerlink" title="左上角天气"></a>左上角天气</h2><p>更新中…</p><h2 id="飘雪花"><a href="#飘雪花" class="headerlink" title="飘雪花"></a>飘雪花</h2><p>更新中…</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Hexo博客】本平台安装美化笔记（二）之主题插件总结</title>
      <link href="/zgyblog/posts/833d770/"/>
      <url>/zgyblog/posts/833d770/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zgyblog\css\APlayer.min.css"><script src="\zgyblog\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\zgyblog\js\Meting.min.js"></script><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo-"></a>hexo-</h2><p>解释：首页文章轮播插件</p><h2 id="hexo-1"><a href="#hexo-1" class="headerlink" title="hexo-"></a>hexo-</h2><p>解释：时钟插件</p><h2 id="hexo-2"><a href="#hexo-2" class="headerlink" title="hexo-"></a>hexo-</h2><p>解释：gitee贡献日历插件</p><h2 id="hexo-generator-sitemap"><a href="#hexo-generator-sitemap" class="headerlink" title="hexo-generator-sitemap"></a>hexo-generator-sitemap</h2><p>解释：生成站点地图</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【其它】移动端访问</title>
      <link href="/zgyblog/posts/15438bb4/"/>
      <url>/zgyblog/posts/15438bb4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zgyblog\css\APlayer.min.css"><script src="\zgyblog\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\zgyblog\js\Meting.min.js"></script>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其它 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【其它】随笔</title>
      <link href="/zgyblog/posts/f77810a8/"/>
      <url>/zgyblog/posts/f77810a8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zgyblog\css\APlayer.min.css"><script src="\zgyblog\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\zgyblog\js\Meting.min.js"></script>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其它 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Hexo博客】本平台安装美化笔记（一）之快速开始</title>
      <link href="/zgyblog/posts/ae0e1b12/"/>
      <url>/zgyblog/posts/ae0e1b12/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zgyblog\css\APlayer.min.css"><script src="\zgyblog\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\zgyblog\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note info flat"><p>本地的起步环境如下<br>Windows10专业版 21H2<br>node: 10.23.1<br>npm: 6.14.10<br>git: 2.13.0</p></div><div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test-1">1.安装测试以上环境</button></li><li class="tab"><button type="button" data-href="#test-2">2.安装hexo</button></li><li class="tab"><button type="button" data-href="#test-3">3.运行hexo</button></li><li class="tab"><button type="button" data-href="#test-4">4.butterfly主题安装</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test-1"><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#检测git</span><br><span class="line">git --version</span><br><span class="line">#检测node</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-2"><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 通过npm安装hexo</span><br><span class="line">npm install -g hexo</span><br><span class="line"># 初始化创建，会在你所在位置创建 blog 文件夹</span><br><span class="line">hexo init blog</span><br><span class="line"># 进入 blog 目录</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"># 进一步安装hexo所需文件</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>参考链接<a href="https://kaiter-plus.gitee.io/2020/03/07/How_To_Freely_Build_Blog/">https://kaiter-plus.gitee.io/2020/03/07/How_To_Freely_Build_Blog/</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-3"><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 清除所有记录</span><br><span class="line">hexo clean </span><br><span class="line"># 生成静态网页</span><br><span class="line">hexo generate</span><br><span class="line"># 启动服务</span><br><span class="line">hexo server</span><br><span class="line"># 以上可以由快捷命令代替</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>参考链接<a href="https://kaiter-plus.gitee.io/2020/03/07/How_To_Freely_Build_Blog/">https://kaiter-plus.gitee.io/2020/03/07/How_To_Freely_Build_Blog/</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-4"><p>hexo自带默认主题landscape<br>butterfly主题，请参考<a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>本地的最终环境如下<br>Windows10专业版 21H2<br>node: 10.23.1<br>npm: 6.14.10<br>git: 2.13.0<br>hexo: 5.4.1<br>butterfly: 4.1.0 </p></div><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>更新中…</p><h2 id="主题页面"><a href="#主题页面" class="headerlink" title="主题页面"></a>主题页面</h2><p>更新中…</p><h2 id="主题配置-1"><a href="#主题配置-1" class="headerlink" title="主题配置-1"></a>主题配置-1</h2><p>更新中…</p><h2 id="主题配置-2"><a href="#主题配置-2" class="headerlink" title="主题配置-2"></a>主题配置-2</h2><p>更新中…</p><h2 id="进阶教程"><a href="#进阶教程" class="headerlink" title="进阶教程"></a>进阶教程</h2><p>更新中…</p><h2 id="以下自己的见解"><a href="#以下自己的见解" class="headerlink" title="以下自己的见解"></a>以下自己的见解</h2><div class="note danger flat"><p>同时推送到gitee和github的配置问题</p></div><p>gitee.io和github.io共用一个gitalk的话，在github上配置时只有一个回调url可以填写<br>一般homepage和回调url填一样的主页链接，登陆账号时，回调url会出现问题，无法分别跳转回自己的页面。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/zgyblog/posts/4a17b156/"/>
      <url>/zgyblog/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\zgyblog\css\APlayer.min.css"><script src="\zgyblog\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\zgyblog\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其它 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
